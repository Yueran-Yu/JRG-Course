{"version":3,"sources":["assignment.js"],"names":["window","dom","find","selector","scope","document","querySelectorAll","style","node","name","value","arguments","length","Object","key","each","nodes","fn","i","call","div","console","log","divList","n"],"mappings":"AAAAA,MAAM,CAACC,GAAP,GAAa;AACXC,EAAAA,IADW,gBACNC,QADM,EACIC,KADJ,EACW;AACpB,WAAO,CAACA,KAAK,IAAIC,QAAV,EAAoBC,gBAApB,CAAqCH,QAArC,CAAP;AACD,GAHU;AAIXI,EAAAA,KAJW,iBAILC,IAJK,EAICC,IAJD,EAIOC,KAJP,EAIc;AACvB,QAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AAC1BJ,MAAAA,IAAI,CAACD,KAAL,CAAWE,IAAX,IAAmBC,KAAnB;AAED,KAHD,MAGO,IAAIC,SAAS,CAACC,MAAV,KAAqB,CAAzB,EAA4B;AACjC,UAAIH,IAAI,YAAYI,MAApB,EAA4B;AAC1B,aAAK,IAAIC,GAAT,IAAgBL,IAAhB,EAAsB;AACpBD,UAAAA,IAAI,CAACD,KAAL,CAAWO,GAAX,IAAkBL,IAAI,CAACK,GAAD,CAAtB;AACD;AACF,OAJD,MAIO,IAAI,OAAOL,IAAP,KAAgB,QAApB,EAA8B;AACnC,eAAOD,IAAI,CAACD,KAAL,CAAWE,IAAX,CAAP;AACD;AACF;AACF,GAjBU;AAkBXM,EAAAA,IAlBW,gBAkBNC,KAlBM,EAkBCC,EAlBD,EAkBK;AACd,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,KAAK,CAACJ,MAAzB,EAAiCM,CAAC,EAAlC,EAAqC;AACnCD,MAAAA,EAAE,CAACE,IAAH,CAAQ,IAAR,EAAcH,KAAK,CAACE,CAAD,CAAnB;AACD;AACF;AAtBU,CAAb;AAyBA,IAAME,GAAG,GAAGnB,GAAG,CAACC,IAAJ,CAAS,YAAT,EAAuB,CAAvB,CAAZ,EAAsC;;AACtCmB,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAnB,GAAG,CAACM,KAAJ,CAAUa,GAAV,EAAe,OAAf,EAAwB,KAAxB,GAA+B;;AAE/B,IAAMG,OAAO,GAAGtB,GAAG,CAACC,IAAJ,CAAS,MAAT,CAAhB,EAAiC;;AACjCD,GAAG,CAACc,IAAJ,CAASQ,OAAT,EAAkB,UAACC,CAAD;AAAA,SAAOH,OAAO,CAACC,GAAR,CAAYE,CAAZ,CAAP;AAAA,CAAlB,GAAyC","file":"assignment.b43543b3.js","sourceRoot":"../src","sourcesContent":["window.dom = {\n  find(selector, scope) {\n    return (scope || document).querySelectorAll(selector)\n  },\n  style(node, name, value) {\n    if (arguments.length === 3) {\n      node.style[name] = value\n\n    } else if (arguments.length === 2) {\n      if (name instanceof Object) {\n        for (let key in name) {\n          node.style[key] = name[key]\n        }\n      } else if (typeof name === 'string') {\n        return node.style[name]\n      }\n    }\n  },\n  each(nodes, fn) {\n    for(let i = 0; i < nodes.length; i++){\n      fn.call(null, nodes[i])\n    }\n  }\n}\n\nconst div = dom.find('#test>.red')[0] // 获取对应的元素\nconsole.log(div)\ndom.style(div, 'color', 'red') // 设置 div.style.color\n\nconst divList = dom.find('.red') // 获取多个 div.red 元素\ndom.each(divList, (n) => console.log(n)) // 遍历 divList 里的所有元素"]}